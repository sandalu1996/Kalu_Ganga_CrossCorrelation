# -*- coding: utf-8 -*-
"""Cross Corelation between Kalu ganga and other small rivers.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OWKrGP7EJNS4AEBF3IV4kegYX-KGSEGi
"""

from urllib import request
import json
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy import signal
from scipy.signal import find_peaks
import statsmodels.tsa.stattools as smt
from datetime import datetime

def Water_level(url):
  fileopen = request.urlopen(url)
  file_info = fileopen.read()
  file_info_str = str(file_info)
  file_info_str[2:]
  file_lines=file_info_str[2:-1].split('\\n')

  new_file = open('file.json',"w")
  for info in file_lines:
    new_file.write(info+'\n')
  
  new_file.close()
  with open('/content/file.json') as f:
    data = json.load(f)

  data2=data["results"]
  data3=data2['chartOptions']
  data4=data3['series']

  df = pd.DataFrame(data4)
  return pd.DataFrame(df['data'][0],columns=['water level'])

kalu_ganga = Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=I97')
kukule_ganga=Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=ID6')
galathuru_oya = Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=ID4')
way_ganga =  Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=ID7')
Niriella_ganga = Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=ID8')
denawaka_ganga = Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=ID5')
kuru_ganga = Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=ID3')

ccf_output11 = smt.ccf(kalu_ganga['water level'],kuru_ganga['water level'], unbiased=False)
ccf_output12 = smt.ccf(kuru_ganga['water level'],kalu_ganga['water level'], unbiased=False)
fig1, (plot11,plot12) = plt.subplots(2, 1, figsize=(10, 4.8))
plot11.set_title('Cross-correlation of kalu ganga vs kuru ganga')
plot11.plot(ccf_output11)
plot12.plot(ccf_output12)
peaks11, _ = find_peaks(ccf_output11, height=0)
peaks12,_ = find_peaks(ccf_output12, height=0)
plot11.plot(peaks11, ccf_output11[peaks11], "x")
plot12.plot(peaks12, ccf_output12[peaks12], "x")
fig1.savefig('plot1.png')


ccf_output21 = smt.ccf(kalu_ganga['water level'],kukule_ganga['water level'], unbiased=False)
ccf_output22 = smt.ccf(kukule_ganga['water level'],kalu_ganga['water level'], unbiased=False)
fig2, (plot21,plot22) = plt.subplots(2, 1, figsize=(10, 4.8))
plot21.set_title('Cross-correlation of kalu ganga vs kukule ganga')
plot21.plot(ccf_output21)
plot22.plot(ccf_output22)
peaks21, _ = find_peaks(ccf_output21, height=0)
peaks22,_ = find_peaks(ccf_output22, height=0)
plot21.plot(peaks21, ccf_output21[peaks21], "x")
plot22.plot(peaks22, ccf_output22[peaks22], "x")
fig2.savefig('plot2.png')

ccf_output31 = smt.ccf(kalu_ganga['water level'],galathuru_oya['water level'], unbiased=False)
ccf_output32 = smt.ccf(galathuru_oya['water level'],kalu_ganga['water level'], unbiased=False)
fig3, (plot31,plot32) = plt.subplots(2, 1, figsize=(10, 4.8))
plot31.set_title('Cross-correlation of kalu ganga vs galathuru ganga')
plot31.plot(ccf_output31)
plot32.plot(ccf_output32)
peaks31, _ = find_peaks(ccf_output31, height=0)
peaks32,_ = find_peaks(ccf_output32, height=0)
plot31.plot(peaks31, ccf_output31[peaks31], "x")
plot32.plot(peaks32, ccf_output32[peaks32], "x")
fig3.savefig('plot3.png')

ccf_output41 = smt.ccf(kalu_ganga['water level'],way_ganga['water level'], unbiased=False)
ccf_output42 = smt.ccf(way_ganga['water level'],kalu_ganga['water level'], unbiased=False)
fig4, (plot41,plot42) = plt.subplots(2, 1, figsize=(10, 4.8))
plot41.set_title('Cross-correlation of kalu ganga vs way ganga')
plot41.plot(ccf_output41)
plot42.plot(ccf_output42)
peaks41, _ = find_peaks(ccf_output41, height=0)
peaks42,_ = find_peaks(ccf_output42, height=0)
plot41.plot(peaks41, ccf_output41[peaks41], "x")
plot42.plot(peaks42, ccf_output42[peaks42], "x")
fig4.savefig('plot4.png')

ccf_output51 = smt.ccf(kalu_ganga['water level'],Niriella_ganga['water level'], unbiased=False)
ccf_output52 = smt.ccf(Niriella_ganga['water level'],kalu_ganga['water level'], unbiased=False)
fig5, (plot51,plot52) = plt.subplots(2, 1, figsize=(10, 4.8))
plot51.set_title('Cross-correlation of kalu ganga vs Niriella ganga')
plot51.plot(ccf_output51)
plot52.plot(ccf_output52)
peaks51, _ = find_peaks(ccf_output51, height=0)
peaks52,_ = find_peaks(ccf_output52, height=0)
plot51.plot(peaks51, ccf_output51[peaks51], "x")
plot52.plot(peaks52, ccf_output52[peaks52], "x")
fig5.savefig('plot5.png')

ccf_output61 = smt.ccf(kalu_ganga['water level'],denawaka_ganga['water level'], unbiased=False)
ccf_output62 = smt.ccf(denawaka_ganga['water level'],kalu_ganga['water level'], unbiased=False)
fig6, (plot61,plot62) = plt.subplots(2, 1, figsize=(10, 4.8))
plot61.set_title('Cross-correlation of kalu ganga vs denawaka ganga')
plot61.plot(ccf_output61)
plot62.plot(ccf_output62)
peaks61, _ = find_peaks(ccf_output61, height=0)
peaks62,_ = find_peaks(ccf_output62, height=0)
plot61.plot(peaks61, ccf_output61[peaks61], "x")
plot62.plot(peaks62, ccf_output62[peaks62], "x")
fig6.savefig('plot6.png')



print(peaks11)
print(peaks12)
print(peaks21)
print(peaks22)
print(peaks31)
print(peaks32)
print(peaks41)
print(peaks42)
print(peaks51)
print(peaks52)
print(peaks61)
print(peaks62)

# Returns a datetime object containing the local date and time
dateTimeObj = datetime.now()
print(dateTimeObj)

str(peaks11)

file = open("test1.txt", "w")

print(dateTimeObj,file=file)
print(peaks11,file=file)
print(peaks12,file=file)
print(peaks21,file=file)
print(peaks22,file=file)
print(peaks31,file=file)
print(peaks32,file=file)
print(peaks41,file=file)
print(peaks42,file=file)
print(peaks51,file=file)
print(peaks52,file=file)
print(peaks61,file=file)
print(peaks62,file=file)

file.close()

from urllib import request
import json
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy import signal
from scipy.signal import find_peaks
import statsmodels.tsa.stattools as smt
from datetime import datetime

def Water_level(url):
  fileopen = request.urlopen(url)
  file_info = fileopen.read()
  file_info_str = str(file_info)
  file_info_str[2:]
  file_lines=file_info_str[2:-1].split('\\n')

  new_file = open('file.json',"w")
  for info in file_lines:
    new_file.write(info+'\n')
  
  new_file.close()
  with open('/content/file.json') as f:
    data = json.load(f)

  data2=data["results"]
  data3=data2['chartOptions']
  data4=data3['series']

  df = pd.DataFrame(data4)
  return pd.DataFrame(df['data'][0],columns=['water level'])

kalu_ganga = Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=I97')
kukule_ganga=Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=ID6')
galathuru_oya = Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=ID4')
way_ganga =  Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=ID7')
Niriella_ganga = Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=ID8')
denawaka_ganga = Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=ID5')
kuru_ganga = Water_level(r'https://rivernet.lk/_kaluganga-overview/server/api/latest-24h?device=ID3')

ccf_output11 = smt.ccf(kalu_ganga['water level'],kuru_ganga['water level'], unbiased=False)
ccf_output12 = smt.ccf(kuru_ganga['water level'],kalu_ganga['water level'], unbiased=False)
fig1, (plot11,plot12) = plt.subplots(2, 1, figsize=(10, 4.8))
plot11.set_title('Cross-correlation of kalu ganga vs kuru ganga')
plot11.plot(ccf_output11)
plot12.plot(ccf_output12)
peaks11, _ = find_peaks(ccf_output11, height=0)
peaks12,_ = find_peaks(ccf_output12, height=0)
plot11.plot(peaks11, ccf_output11[peaks11], "x")
plot12.plot(peaks12, ccf_output12[peaks12], "x")
fig1.savefig('plot1.png')


ccf_output21 = smt.ccf(kalu_ganga['water level'],kukule_ganga['water level'], unbiased=False)
ccf_output22 = smt.ccf(kukule_ganga['water level'],kalu_ganga['water level'], unbiased=False)
fig2, (plot21,plot22) = plt.subplots(2, 1, figsize=(10, 4.8))
plot21.set_title('Cross-correlation of kalu ganga vs kukule ganga')
plot21.plot(ccf_output21)
plot22.plot(ccf_output22)
peaks21, _ = find_peaks(ccf_output21, height=0)
peaks22,_ = find_peaks(ccf_output22, height=0)
plot21.plot(peaks21, ccf_output21[peaks21], "x")
plot22.plot(peaks22, ccf_output22[peaks22], "x")
fig2.savefig('plot2.png')

ccf_output31 = smt.ccf(kalu_ganga['water level'],galathuru_oya['water level'], unbiased=False)
ccf_output32 = smt.ccf(galathuru_oya['water level'],kalu_ganga['water level'], unbiased=False)
fig3, (plot31,plot32) = plt.subplots(2, 1, figsize=(10, 4.8))
plot31.set_title('Cross-correlation of kalu ganga vs galathuru ganga')
plot31.plot(ccf_output31)
plot32.plot(ccf_output32)
peaks31, _ = find_peaks(ccf_output31, height=0)
peaks32,_ = find_peaks(ccf_output32, height=0)
plot31.plot(peaks31, ccf_output31[peaks31], "x")
plot32.plot(peaks32, ccf_output32[peaks32], "x")
fig3.savefig('plot3.png')

ccf_output41 = smt.ccf(kalu_ganga['water level'],way_ganga['water level'], unbiased=False)
ccf_output42 = smt.ccf(way_ganga['water level'],kalu_ganga['water level'], unbiased=False)
fig4, (plot41,plot42) = plt.subplots(2, 1, figsize=(10, 4.8))
plot41.set_title('Cross-correlation of kalu ganga vs way ganga')
plot41.plot(ccf_output41)
plot42.plot(ccf_output42)
peaks41, _ = find_peaks(ccf_output41, height=0)
peaks42,_ = find_peaks(ccf_output42, height=0)
plot41.plot(peaks41, ccf_output41[peaks41], "x")
plot42.plot(peaks42, ccf_output42[peaks42], "x")
fig4.savefig('plot4.png')

ccf_output51 = smt.ccf(kalu_ganga['water level'],Niriella_ganga['water level'], unbiased=False)
ccf_output52 = smt.ccf(Niriella_ganga['water level'],kalu_ganga['water level'], unbiased=False)
fig5, (plot51,plot52) = plt.subplots(2, 1, figsize=(10, 4.8))
plot51.set_title('Cross-correlation of kalu ganga vs Niriella ganga')
plot51.plot(ccf_output51)
plot52.plot(ccf_output52)
peaks51, _ = find_peaks(ccf_output51, height=0)
peaks52,_ = find_peaks(ccf_output52, height=0)
plot51.plot(peaks51, ccf_output51[peaks51], "x")
plot52.plot(peaks52, ccf_output52[peaks52], "x")
fig5.savefig('plot5.png')

ccf_output61 = smt.ccf(kalu_ganga['water level'],denawaka_ganga['water level'], unbiased=False)
ccf_output62 = smt.ccf(denawaka_ganga['water level'],kalu_ganga['water level'], unbiased=False)
fig6, (plot61,plot62) = plt.subplots(2, 1, figsize=(10, 4.8))
plot61.set_title('Cross-correlation of kalu ganga vs denawaka ganga')
plot61.plot(ccf_output61)
plot62.plot(ccf_output62)
peaks61, _ = find_peaks(ccf_output61, height=0)
peaks62,_ = find_peaks(ccf_output62, height=0)
plot61.plot(peaks61, ccf_output61[peaks61], "x")
plot62.plot(peaks62, ccf_output62[peaks62], "x")
fig6.savefig('plot6.png')

dateTimeObj = datetime.now()

file = open("test1.txt", "w")

print(dateTimeObj,file=file)
print(peaks11,file=file)
print(peaks12,file=file)
print(peaks21,file=file)
print(peaks22,file=file)
print(peaks31,file=file)
print(peaks32,file=file)
print(peaks41,file=file)
print(peaks42,file=file)
print(peaks51,file=file)
print(peaks52,file=file)
print(peaks61,file=file)
print(peaks62,file=file)

file.close()